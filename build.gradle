plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.diffplug.spotless' version '6.25.0'
}

group = 'com.aleksandrmakarov'
version = '0.0.1-SNAPSHOT'
description = 'Journals TG bot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.telegram:telegrambots:6.8.0'
	implementation 'org.telegram:telegrambots-meta:6.8.0'
	implementation 'org.xerial:sqlite-jdbc:3.45.0.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Exclude commons-logging to avoid conflicts with spring-jcl
configurations.all {
	exclude group: 'commons-logging', module: 'commons-logging'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Ensure annotation processing works correctly
tasks.withType(JavaCompile) {
	options.annotationProcessorPath = configurations.annotationProcessor
	options.compilerArgs += ['-parameters']
}

// Spotless configuration for code formatting
spotless {
	java {
		googleJavaFormat('1.19.2')
		removeUnusedImports()
		trimTrailingWhitespace()
		endWithNewline()
	}
}
