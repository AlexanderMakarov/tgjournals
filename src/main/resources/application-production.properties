# Production configuration for GraalVM native image
spring.application.name=journals

# Database configuration
# For Supabase/cloud databases, add SSL parameters: ?sslmode=require
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:journals}${DB_SSL_PARAMS:}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.continue-on-error=true
spring.sql.init.separator=;

# Telegram Bot configuration
telegram.bot.token=${TELEGRAM_BOT_TOKEN:}
telegram.bot.username=${TELEGRAM_BOT_USERNAME:}
telegram.bot.webhook.path=${TELEGRAM_WEBHOOK_PATH:/webhook}
telegram.bot.webhook.secret=${TELEGRAM_WEBHOOK_SECRET:}

# Server configuration
server.port=${PORT:8080}

# OpenAPI configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/docs
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.try-it-out-enabled=true
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha

# Production logging configuration
logging.level.com.aleksandrmakarov.journals=INFO
logging.level.org.springframework.web=WARN
logging.level.org.telegram.telegrambots=WARN
logging.level.org.springframework.jdbc.core.JdbcTemplate=WARN
logging.level.org.springframework.aop=WARN
logging.level.org.springframework.cglib=WARN

# Disable development features
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false

# Native image optimizations
spring.aot.enabled=true
spring.main.lazy-initialization=false

# Force JDK dynamic proxies instead of CGLIB for GraalVM native images
spring.aop.proxy-target-class=false
