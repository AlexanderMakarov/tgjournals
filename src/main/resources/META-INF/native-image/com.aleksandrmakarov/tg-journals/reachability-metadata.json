{
  "reflection": [
    {
      "type": "boolean"
    },
    {
      "type": "boolean[]",
      "jniAccessible": true
    },
    {
      "type": "ch.qos.logback.classic.BasicConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.LoggerContext"
    },
    {
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.spi.LogbackServiceProvider"
    },
    {
      "type": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.ConsoleAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.FileAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setAppend",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setFile",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.OutputStreamAppender",
      "methods": [
        {
          "name": "setEncoder",
          "parameterTypes": [
            "ch.qos.logback.core.encoder.Encoder"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.encoder.Encoder"
    },
    {
      "type": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
      "methods": [
        {
          "name": "setParent",
          "parameterTypes": [
            "ch.qos.logback.core.spi.ContextAware"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
      "methods": [
        {
          "name": "setPattern",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.spi.ContextAware"
    },
    {
      "type": "co.elastic.clients.elasticsearch.ElasticsearchClient"
    },
    {
      "type": "co.elastic.clients.transport.ElasticsearchTransport"
    },
    {
      "type": "com.aleksandrmakarov.journals.JournalsApplication",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.bot.BotCommandHandler",
      "fields": [
        {
          "name": "journalService"
        },
        {
          "name": "sessionService"
        },
        {
          "name": "userService"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.bot.JournalsBot",
      "fields": [
        {
          "name": "commandHandler"
        },
        {
          "name": "userService"
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.config.TelegramBotConfig",
      "fields": [
        {
          "name": "botToken"
        },
        {
          "name": "botUsername"
        },
        {
          "name": "webhookPath"
        }
      ],
      "methods": [
        {
          "name": "journalsBot",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.config.TelegramBotConfig$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "$$beanFactory"
        },
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.config.TelegramBotConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.config.TelegramBotConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.controller.AnonymousController",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.aleksandrmakarov.journals.repository.UserRepository",
            "com.aleksandrmakarov.journals.repository.SessionRepository",
            "com.aleksandrmakarov.journals.repository.JournalRepository"
          ]
        },
        {
          "name": "health",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.controller.WebhookController",
      "fields": [
        {
          "name": "bot"
        },
        {
          "name": "webhookSecurityService"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webhook",
          "parameterTypes": [
            "org.telegram.telegrambots.meta.api.objects.Update",
            "jakarta.servlet.http.HttpServletRequest"
          ]
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.repository.JournalRepository"
    },
    {
      "type": "com.aleksandrmakarov.journals.repository.QuestionRepository"
    },
    {
      "type": "com.aleksandrmakarov.journals.repository.SessionRepository"
    },
    {
      "type": "com.aleksandrmakarov.journals.repository.SqliteJournalRepository",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.jdbc.core.JdbcTemplate"
          ]
        },
        {
          "name": "count",
          "parameterTypes": []
        },
        {
          "name": "findLastNJournalsPerUser",
          "parameterTypes": [
            "java.lang.Long",
            "int"
          ]
        },
        {
          "name": "initRowMapper",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.repository.SqliteJournalRepository$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.repository.SqliteQuestionRepository",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.jdbc.core.JdbcTemplate"
          ]
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.repository.SqliteQuestionRepository$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.repository.SqliteSessionRepository",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.jdbc.core.JdbcTemplate"
          ]
        },
        {
          "name": "count",
          "parameterTypes": []
        },
        {
          "name": "findActiveSession",
          "parameterTypes": []
        },
        {
          "name": "initRowMapper",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.repository.SqliteSessionRepository$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.repository.SqliteUserRepository",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.jdbc.core.JdbcTemplate"
          ]
        },
        {
          "name": "count",
          "parameterTypes": []
        },
        {
          "name": "findByTelegramId",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "findParticipantsOrderedByLastJournal",
          "parameterTypes": []
        },
        {
          "name": "initParticipantRowMapper",
          "parameterTypes": []
        },
        {
          "name": "initRowMapper",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.repository.SqliteUserRepository$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.repository.UserRepository"
    },
    {
      "type": "com.aleksandrmakarov.journals.security.WebhookSecurityService",
      "fields": [
        {
          "name": "webhookSecret"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.service.JournalService"
    },
    {
      "type": "com.aleksandrmakarov.journals.service.JournalServiceImpl",
      "fields": [
        {
          "name": "journalRepository"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.service.JournalServiceImpl$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.service.SessionService"
    },
    {
      "type": "com.aleksandrmakarov.journals.service.SqliteSessionImpl",
      "fields": [
        {
          "name": "journalRepository"
        },
        {
          "name": "questionRepository"
        },
        {
          "name": "sessionRepository"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getActiveSession",
          "parameterTypes": []
        },
        {
          "name": "getJournalsForLastSessions",
          "parameterTypes": [
            "java.lang.Long",
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.service.SqliteSessionImpl$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.service.UserService"
    },
    {
      "type": "com.aleksandrmakarov.journals.service.UserServiceImpl",
      "fields": [
        {
          "name": "userRepository"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "findOrCreateUser",
          "parameterTypes": [
            "java.lang.Long",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "getParticipantsOrderedByLastJournal",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.aleksandrmakarov.journals.service.UserServiceImpl$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.couchbase.client.java.Bucket"
    },
    {
      "type": "com.couchbase.client.java.Cluster"
    },
    {
      "type": "com.datastax.oss.driver.api.core.CqlSession"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonInclude$Include"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonGenerator"
    },
    {
      "type": "com.fasterxml.jackson.core.ObjectCodec"
    },
    {
      "type": "com.fasterxml.jackson.core.TreeCodec"
    },
    {
      "type": "com.fasterxml.jackson.core.Versioned"
    },
    {
      "type": "com.fasterxml.jackson.databind.JsonDeserializer"
    },
    {
      "type": "com.fasterxml.jackson.databind.Module"
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectMapper"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[]"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.Deserializers[]"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.KeyDeserializers[]"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.NullValueProvider"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.ValueInstantiator$Gettable"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.ValueInstantiators[]"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.std.StdDeserializer"
    },
    {
      "type": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleModule"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.BeanSerializerModifier[]"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.Serializers[]"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.cbor.CBORFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.smile.SmileFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.xml.XmlMapper"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.yaml.YAMLFactory"
    },
    {
      "type": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.module.kotlin.KotlinModule"
    },
    {
      "type": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Caffeine"
    },
    {
      "type": "com.github.therapi.runtimejavadoc.CommentFormatter"
    },
    {
      "type": "com.google.gson.Gson"
    },
    {
      "type": "com.hazelcast.core.HazelcastInstance"
    },
    {
      "type": "com.mongodb.client.MongoClient"
    },
    {
      "type": "com.mongodb.reactivestreams.client.MongoClient"
    },
    {
      "type": "com.nimbusds.jose.jwk.source.JWKSource"
    },
    {
      "type": "com.querydsl.core.Query"
    },
    {
      "type": "com.rabbitmq.client.Channel"
    },
    {
      "type": "com.rometools.rome.feed.WireFeed"
    },
    {
      "type": "com.samskivert.mustache.Mustache"
    },
    {
      "type": "com.samskivert.mustache.Template"
    },
    {
      "type": "com.sendgrid.SendGrid"
    },
    {
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ARCFOURCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESedeCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DHParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.HKDFKeyDerivation$HKDFSHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "javax.crypto.KDFParameters"
          ]
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.unboundid.ldap.listener.InMemoryDirectoryServer"
    },
    {
      "type": "com.zaxxer.hikari.HikariConfig",
      "methods": [
        {
          "name": "getCredentials",
          "parameterTypes": []
        },
        {
          "name": "setMaximumPoolSize",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setMinimumIdle",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.zaxxer.hikari.HikariConfigMXBean"
    },
    {
      "type": "com.zaxxer.hikari.HikariDataSource",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.zaxxer.hikari.pool.PoolBase"
    },
    {
      "type": "com.zaxxer.hikari.pool.PoolEntry"
    },
    {
      "type": "com.zaxxer.hikari.util.Credentials"
    },
    {
      "type": "freemarker.template.Configuration"
    },
    {
      "type": "graphql.GraphQL"
    },
    {
      "type": "groovy.lang.MetaClass"
    },
    {
      "type": "groovy.text.TemplateEngine"
    },
    {
      "type": "groovy.text.markup.MarkupTemplateEngine"
    },
    {
      "type": "int[]"
    },
    {
      "type": "io.micrometer.context.ContextSnapshot"
    },
    {
      "type": "io.netty.buffer.PooledByteBufAllocator"
    },
    {
      "type": "io.netty.util.NettyRuntime"
    },
    {
      "type": "io.r2dbc.proxy.ProxyConnectionFactory"
    },
    {
      "type": "io.r2dbc.spi.ConnectionFactory"
    },
    {
      "type": "io.reactivex.rxjava3.core.Flowable"
    },
    {
      "type": "io.rsocket.RSocket"
    },
    {
      "type": "io.rsocket.core.RSocketServer"
    },
    {
      "type": "io.smallrye.mutiny.Multi"
    },
    {
      "type": "io.swagger.v3.core.converter.ModelConverter"
    },
    {
      "type": "io.swagger.v3.core.converter.ModelConverters",
      "fields": [
        {
          "name": "converters"
        }
      ]
    },
    {
      "type": "io.swagger.v3.core.filter.SpecFilter"
    },
    {
      "type": "io.swagger.v3.core.util.ObjectMapperFactory"
    },
    {
      "type": "io.swagger.v3.oas.annotations.ExternalDocumentation"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Hidden"
    },
    {
      "type": "io.swagger.v3.oas.annotations.OpenAPI31"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Operation"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Parameter"
    },
    {
      "type": "io.swagger.v3.oas.annotations.StringToClassMapItem"
    },
    {
      "type": "io.swagger.v3.oas.annotations.extensions.Extension"
    },
    {
      "type": "io.swagger.v3.oas.annotations.extensions.ExtensionProperty"
    },
    {
      "type": "io.swagger.v3.oas.annotations.headers.Header"
    },
    {
      "type": "io.swagger.v3.oas.annotations.links.Link"
    },
    {
      "type": "io.swagger.v3.oas.annotations.links.LinkParameter"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.ArraySchema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Content"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DependentRequired"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DependentSchema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DiscriminatorMapping"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Encoding"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.ExampleObject"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Schema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.SchemaProperty"
    },
    {
      "type": "io.swagger.v3.oas.annotations.parameters.RequestBody"
    },
    {
      "type": "io.swagger.v3.oas.annotations.responses.ApiResponse"
    },
    {
      "type": "io.swagger.v3.oas.annotations.responses.ApiResponses"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.SecurityRequirement"
    },
    {
      "type": "io.swagger.v3.oas.annotations.servers.Server"
    },
    {
      "type": "io.swagger.v3.oas.annotations.servers.ServerVariable"
    },
    {
      "type": "io.swagger.v3.oas.annotations.tags.Tag"
    },
    {
      "type": "io.swagger.v3.oas.models.SpecVersion"
    },
    {
      "type": "io.undertow.Undertow"
    },
    {
      "type": "io.undertow.websockets.jsr.Bootstrap"
    },
    {
      "type": "io.vavr.control.Try"
    },
    {
      "type": "jakarta.activation.MimeType"
    },
    {
      "type": "jakarta.annotation.ManagedBean"
    },
    {
      "type": "jakarta.annotation.PostConstruct"
    },
    {
      "type": "jakarta.annotation.PreDestroy"
    },
    {
      "type": "jakarta.annotation.Resource"
    },
    {
      "type": "jakarta.ejb.EJB"
    },
    {
      "type": "jakarta.ejb.TransactionAttribute"
    },
    {
      "type": "jakarta.faces.context.FacesContext"
    },
    {
      "type": "jakarta.inject.Inject"
    },
    {
      "type": "jakarta.inject.Named"
    },
    {
      "type": "jakarta.inject.Provider"
    },
    {
      "type": "jakarta.inject.Qualifier"
    },
    {
      "type": "jakarta.jms.ConnectionFactory"
    },
    {
      "type": "jakarta.jms.Message"
    },
    {
      "type": "jakarta.json.bind.Jsonb"
    },
    {
      "type": "jakarta.mail.internet.MimeMessage"
    },
    {
      "type": "jakarta.persistence.EntityManager"
    },
    {
      "type": "jakarta.persistence.EntityManagerFactory"
    },
    {
      "type": "jakarta.persistence.Persistence"
    },
    {
      "type": "jakarta.persistence.PersistenceContext"
    },
    {
      "type": "jakarta.servlet.Filter"
    },
    {
      "type": "jakarta.servlet.GenericFilter"
    },
    {
      "type": "jakarta.servlet.GenericServlet"
    },
    {
      "type": "jakarta.servlet.MultipartConfigElement"
    },
    {
      "type": "jakarta.servlet.Servlet"
    },
    {
      "type": "jakarta.servlet.ServletConfig"
    },
    {
      "type": "jakarta.servlet.ServletContext"
    },
    {
      "type": "jakarta.servlet.ServletRegistration"
    },
    {
      "type": "jakarta.servlet.ServletRequest"
    },
    {
      "type": "jakarta.servlet.http.HttpServlet"
    },
    {
      "type": "jakarta.servlet.jsp.jstl.core.Config"
    },
    {
      "type": "jakarta.transaction.Transaction"
    },
    {
      "type": "jakarta.transaction.TransactionManager"
    },
    {
      "type": "jakarta.transaction.Transactional"
    },
    {
      "type": "jakarta.validation.Validator"
    },
    {
      "type": "jakarta.validation.ValidatorFactory"
    },
    {
      "type": "jakarta.validation.bootstrap.GenericBootstrap"
    },
    {
      "type": "jakarta.validation.executable.ExecutableValidator"
    },
    {
      "type": "jakarta.websocket.server.ServerContainer"
    },
    {
      "type": "jakarta.xml.bind.Binder"
    },
    {
      "type": "jakarta.xml.ws.WebServiceRef"
    },
    {
      "type": "java.beans.ConstructorProperties"
    },
    {
      "type": "java.io.Closeable"
    },
    {
      "type": "java.io.Serializable"
    },
    {
      "type": "java.io.Serializable[]"
    },
    {
      "type": "java.lang.AutoCloseable"
    },
    {
      "type": "java.lang.Boolean",
      "jniAccessible": true,
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.CharSequence[]"
    },
    {
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "getModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.ClassLoader",
      "fields": [
        {
          "name": "classLoaderValueMap"
        }
      ]
    },
    {
      "type": "java.lang.Class[]"
    },
    {
      "type": "java.lang.CloneNotSupportedException"
    },
    {
      "type": "java.lang.Cloneable"
    },
    {
      "type": "java.lang.Comparable"
    },
    {
      "type": "java.lang.Comparable[]"
    },
    {
      "type": "java.lang.Error"
    },
    {
      "type": "java.lang.Iterable"
    },
    {
      "type": "java.lang.Module",
      "methods": [
        {
          "name": "isNamed",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Object",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Object[]"
    },
    {
      "type": "java.lang.Record"
    },
    {
      "type": "java.lang.RuntimeException"
    },
    {
      "type": "java.lang.String"
    },
    {
      "type": "java.lang.String[]"
    },
    {
      "type": "java.lang.Thread"
    },
    {
      "type": "java.lang.Thread$Builder"
    },
    {
      "type": "java.lang.Throwable",
      "jniAccessible": true,
      "methods": [
        {
          "name": "toString",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.WrongThreadException"
    },
    {
      "type": "java.lang.annotation.Annotation[]"
    },
    {
      "type": "java.lang.annotation.Documented"
    },
    {
      "type": "java.lang.annotation.Inherited"
    },
    {
      "type": "java.lang.annotation.Repeatable"
    },
    {
      "type": "java.lang.annotation.Retention"
    },
    {
      "type": "java.lang.annotation.Target"
    },
    {
      "type": "java.lang.constant.Constable"
    },
    {
      "type": "java.lang.constant.Constable[]"
    },
    {
      "type": "java.lang.constant.ConstantDesc[]"
    },
    {
      "type": "java.lang.invoke.TypeDescriptor$OfField"
    },
    {
      "type": "java.lang.reflect.AnnotatedElement"
    },
    {
      "type": "java.lang.reflect.GenericArrayType",
      "methods": [
        {
          "name": "getGenericComponentType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.GenericDeclaration"
    },
    {
      "type": "java.lang.reflect.ParameterizedType",
      "methods": [
        {
          "name": "getActualTypeArguments",
          "parameterTypes": []
        },
        {
          "name": "getRawType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Type"
    },
    {
      "type": "java.lang.reflect.TypeVariable",
      "methods": [
        {
          "name": "getBounds",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.UndeclaredThrowableException"
    },
    {
      "type": "java.lang.reflect.WildcardType",
      "methods": [
        {
          "name": "getLowerBounds",
          "parameterTypes": []
        },
        {
          "name": "getUpperBounds",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.net.UnixDomainSocketAddress"
    },
    {
      "type": "java.net.http.HttpClient"
    },
    {
      "type": "java.nio.channels.ServerSocketChannel"
    },
    {
      "type": "java.nio.channels.SocketChannel"
    },
    {
      "type": "java.security.AlgorithmParametersSpi"
    },
    {
      "type": "java.security.KeyStoreSpi"
    },
    {
      "type": "java.security.interfaces.RSAPrivateKey"
    },
    {
      "type": "java.security.interfaces.RSAPublicKey"
    },
    {
      "type": "java.sql.Driver"
    },
    {
      "type": "java.sql.DriverManager"
    },
    {
      "type": "java.sql.Statement[]"
    },
    {
      "type": "java.sql.Types",
      "fields": [
        {
          "name": "ARRAY"
        },
        {
          "name": "BIGINT"
        },
        {
          "name": "BINARY"
        },
        {
          "name": "BIT"
        },
        {
          "name": "BLOB"
        },
        {
          "name": "BOOLEAN"
        },
        {
          "name": "CHAR"
        },
        {
          "name": "CLOB"
        },
        {
          "name": "DATALINK"
        },
        {
          "name": "DATE"
        },
        {
          "name": "DECIMAL"
        },
        {
          "name": "DISTINCT"
        },
        {
          "name": "DOUBLE"
        },
        {
          "name": "FLOAT"
        },
        {
          "name": "INTEGER"
        },
        {
          "name": "JAVA_OBJECT"
        },
        {
          "name": "LONGNVARCHAR"
        },
        {
          "name": "LONGVARBINARY"
        },
        {
          "name": "LONGVARCHAR"
        },
        {
          "name": "NCHAR"
        },
        {
          "name": "NCLOB"
        },
        {
          "name": "NULL"
        },
        {
          "name": "NUMERIC"
        },
        {
          "name": "NVARCHAR"
        },
        {
          "name": "OTHER"
        },
        {
          "name": "REAL"
        },
        {
          "name": "REF"
        },
        {
          "name": "REF_CURSOR"
        },
        {
          "name": "ROWID"
        },
        {
          "name": "SMALLINT"
        },
        {
          "name": "SQLXML"
        },
        {
          "name": "STRUCT"
        },
        {
          "name": "TIME"
        },
        {
          "name": "TIMESTAMP"
        },
        {
          "name": "TIMESTAMP_WITH_TIMEZONE"
        },
        {
          "name": "TIME_WITH_TIMEZONE"
        },
        {
          "name": "TINYINT"
        },
        {
          "name": "VARBINARY"
        },
        {
          "name": "VARCHAR"
        }
      ]
    },
    {
      "type": "java.sql.Wrapper"
    },
    {
      "type": "java.text.CompactNumberFormat"
    },
    {
      "type": "java.text.ListFormat"
    },
    {
      "type": "java.util.AbstractCollection"
    },
    {
      "type": "java.util.AbstractList"
    },
    {
      "type": "java.util.ArrayList"
    },
    {
      "type": "java.util.Collection"
    },
    {
      "type": "java.util.Date"
    },
    {
      "type": "java.util.Enumeration"
    },
    {
      "type": "java.util.EventListener"
    },
    {
      "type": "java.util.HashSet"
    },
    {
      "type": "java.util.List"
    },
    {
      "type": "java.util.RandomAccess"
    },
    {
      "type": "java.util.SequencedCollection"
    },
    {
      "type": "java.util.Set"
    },
    {
      "type": "java.util.concurrent.Callable"
    },
    {
      "type": "java.util.concurrent.Executor"
    },
    {
      "type": "java.util.concurrent.ThreadFactory"
    },
    {
      "type": "java.util.logging.LogManager"
    },
    {
      "type": "java.util.logging.SimpleFormatter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.beans.value.ObservableValue"
    },
    {
      "type": "javax.annotation.ManagedBean"
    },
    {
      "type": "javax.annotation.PostConstruct"
    },
    {
      "type": "javax.annotation.PreDestroy"
    },
    {
      "type": "javax.annotation.Resource"
    },
    {
      "type": "javax.cache.Caching"
    },
    {
      "type": "javax.inject.Inject"
    },
    {
      "type": "javax.inject.Named"
    },
    {
      "type": "javax.inject.Qualifier"
    },
    {
      "type": "javax.management.ConstructorParameters"
    },
    {
      "type": "javax.money.MonetaryAmount"
    },
    {
      "type": "javax.naming.InitialContext"
    },
    {
      "type": "javax.naming.ldap.LdapContext"
    },
    {
      "type": "javax.security.auth.Subject"
    },
    {
      "type": "javax.sql.CommonDataSource"
    },
    {
      "type": "javax.sql.DataSource"
    },
    {
      "type": "javax.sql.XADataSource"
    },
    {
      "type": "jdk.crac.management.CRaCMXBean"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$AppClassLoader"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$PlatformClassLoader"
    },
    {
      "type": "jdk.internal.misc.Unsafe"
    },
    {
      "type": "kotlin.Metadata"
    },
    {
      "type": "kotlin.annotation.AnnotationRetention"
    },
    {
      "type": "kotlin.annotation.AnnotationTarget"
    },
    {
      "type": "kotlin.annotation.AnnotationTarget[]"
    },
    {
      "type": "kotlin.annotation.MustBeDocumented"
    },
    {
      "type": "kotlin.annotation.Retention"
    },
    {
      "type": "kotlin.annotation.Target"
    },
    {
      "type": "kotlin.coroutines.Continuation"
    },
    {
      "type": "kotlin.jvm.JvmInline"
    },
    {
      "type": "kotlin.reflect.full.KClasses"
    },
    {
      "type": "kotlinx.coroutines.flow.Flow"
    },
    {
      "type": "kotlinx.coroutines.reactor.MonoKt"
    },
    {
      "type": "kotlinx.serialization.cbor.Cbor"
    },
    {
      "type": "kotlinx.serialization.json.Json"
    },
    {
      "type": "kotlinx.serialization.protobuf.ProtoBuf"
    },
    {
      "type": "liquibase.change.DatabaseChange"
    },
    {
      "type": "long[]"
    },
    {
      "type": "me.paulschwarz.springdotenv.springboot.DotenvApplicationRunListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.SpringApplication",
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "oracle.jdbc.OracleConnection"
    },
    {
      "type": "oracle.ucp.jdbc.PoolDataSource"
    },
    {
      "type": "oracle.ucp.jdbc.PoolDataSourceImpl"
    },
    {
      "type": "org.aopalliance.intercept.MethodInterceptor"
    },
    {
      "type": "org.apache.catalina.core.ApplicationContextFacade"
    },
    {
      "type": "org.apache.catalina.loader.JdbcLeakPrevention",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "clearJdbcDriverRegistrations",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.catalina.startup.Tomcat"
    },
    {
      "type": "org.apache.catalina.util.CharsetMapper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.commons.dbcp2.BasicDataSource"
    },
    {
      "type": "org.apache.coyote.AbstractProtocol",
      "methods": [
        {
          "name": "getAddress",
          "parameterTypes": []
        },
        {
          "name": "getLocalPort",
          "parameterTypes": []
        },
        {
          "name": "getProperty",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPort",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setProperty",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.apache.coyote.UpgradeProtocol"
    },
    {
      "type": "org.apache.coyote.http11.AbstractHttp11Protocol",
      "methods": [
        {
          "name": "isSSLEnabled",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.coyote.http11.Http11NioProtocol"
    },
    {
      "type": "org.apache.derby.jdbc.EmbeddedDriver"
    },
    {
      "type": "org.apache.el.ExpressionFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.hc.client5.http.impl.classic.HttpClients"
    },
    {
      "type": "org.apache.jasper.compiler.JspConfig"
    },
    {
      "type": "org.apache.jasper.servlet.JspServlet"
    },
    {
      "type": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
    },
    {
      "type": "org.apache.logging.log4j.spi.ExtendedLogger"
    },
    {
      "type": "org.apache.logging.slf4j.SLF4JProvider"
    },
    {
      "type": "org.apache.pulsar.client.api.PulsarClient"
    },
    {
      "type": "org.apache.tomcat.jdbc.pool.DataSource"
    },
    {
      "type": "org.apache.tomcat.util.net.AbstractEndpoint",
      "methods": [
        {
          "name": "setBindOnInit",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.apache.tomcat.util.net.NioEndpoint"
    },
    {
      "type": "org.apache.tomcat.websocket.server.WsFilter"
    },
    {
      "type": "org.apache.tomcat.websocket.server.WsSci"
    },
    {
      "type": "org.aspectj.weaver.Advice"
    },
    {
      "type": "org.cache2k.Cache2kBuilder"
    },
    {
      "type": "org.crac.Core"
    },
    {
      "type": "org.crac.Resource"
    },
    {
      "type": "org.eclipse.core.runtime.FileLocator"
    },
    {
      "type": "org.eclipse.jetty.client.HttpClient"
    },
    {
      "type": "org.eclipse.jetty.ee10.webapp.WebAppContext"
    },
    {
      "type": "org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer"
    },
    {
      "type": "org.eclipse.jetty.server.Server"
    },
    {
      "type": "org.eclipse.jetty.util.Loader"
    },
    {
      "type": "org.elasticsearch.client.RestClientBuilder"
    },
    {
      "type": "org.flywaydb.core.Flyway"
    },
    {
      "type": "org.glassfish.jersey.server.spring.SpringComponentProvider"
    },
    {
      "type": "org.graalvm.nativeimage.ImageInfo",
      "methods": [
        {
          "name": "inImageCode",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.h2.Driver"
    },
    {
      "type": "org.h2.server.web.JakartaWebServlet"
    },
    {
      "type": "org.hibernate.validator.HibernateValidator"
    },
    {
      "type": "org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
      "methods": [
        {
          "name": "externalClassLoader",
          "parameterTypes": [
            "java.lang.ClassLoader"
          ]
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.engine.ConfigurationImpl"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jboss.logging.Logger"
          ]
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger_en"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger_en_US"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en_US"
    },
    {
      "type": "org.hsqldb.jdbc.JDBCDriver"
    },
    {
      "type": "org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager"
    },
    {
      "type": "org.jboss.logging.Logger"
    },
    {
      "type": "org.joda.time.ReadableInstant"
    },
    {
      "type": "org.jooq.DSLContext"
    },
    {
      "type": "org.neo4j.driver.Driver"
    },
    {
      "type": "org.quartz.Scheduler"
    },
    {
      "type": "org.reactivestreams.Publisher"
    },
    {
      "type": "org.slf4j.Logger"
    },
    {
      "type": "org.slf4j.bridge.SLF4JBridgeHandler"
    },
    {
      "type": "org.slf4j.spi.LocationAwareLogger",
      "methods": [
        {
          "name": "log",
          "parameterTypes": [
            "org.slf4j.Marker",
            "java.lang.String",
            "int",
            "java.lang.String",
            "java.lang.Object[]",
            "java.lang.Throwable"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.api.AbstractOpenApiResource"
    },
    {
      "type": "org.springdoc.core.conditions.CacheOrGroupedOpenApiCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.conditions.MultipleOpenApiGroupsCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.conditions.MultipleOpenApiSupportCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "additionalModelsConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "fileSupportConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "genericReturnTypeParser",
          "parameterTypes": []
        },
        {
          "name": "localSpringDocParameterNameDiscoverer",
          "parameterTypes": []
        },
        {
          "name": "modelConverterRegistrar",
          "parameterTypes": [
            "java.util.Optional",
            "org.springdoc.core.properties.SpringDocConfigProperties"
          ]
        },
        {
          "name": "openAPIBuilder",
          "parameterTypes": [
            "java.util.Optional",
            "org.springdoc.core.service.SecurityService",
            "org.springdoc.core.properties.SpringDocConfigProperties",
            "org.springdoc.core.utils.PropertyResolverUtils",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional"
          ]
        },
        {
          "name": "operationBuilder",
          "parameterTypes": [
            "org.springdoc.core.service.GenericParameterService",
            "org.springdoc.core.service.RequestBodyService",
            "org.springdoc.core.service.SecurityService",
            "org.springdoc.core.utils.PropertyResolverUtils"
          ]
        },
        {
          "name": "parameterBuilder",
          "parameterTypes": [
            "org.springdoc.core.utils.PropertyResolverUtils",
            "java.util.Optional",
            "java.util.Optional",
            "org.springdoc.core.providers.ObjectMapperProvider",
            "java.util.Optional"
          ]
        },
        {
          "name": "polymorphicModelConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "propertyResolverUtils",
          "parameterTypes": [
            "org.springframework.beans.factory.config.ConfigurableBeanFactory",
            "org.springframework.context.MessageSource",
            "org.springdoc.core.properties.SpringDocConfigProperties"
          ]
        },
        {
          "name": "requestBodyBuilder",
          "parameterTypes": [
            "org.springdoc.core.service.GenericParameterService"
          ]
        },
        {
          "name": "responseSupportConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "schemaPropertyDeprecatingConverter",
          "parameterTypes": []
        },
        {
          "name": "securityParser",
          "parameterTypes": [
            "org.springdoc.core.utils.PropertyResolverUtils"
          ]
        },
        {
          "name": "springDocCustomizers",
          "parameterTypes": [
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional"
          ]
        },
        {
          "name": "springDocProviders",
          "parameterTypes": [
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "springdocObjectMapperProvider",
          "parameterTypes": [
            "org.springdoc.core.properties.SpringDocConfigProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$1"
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springdoc.core.configuration.SpringDocConfiguration"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "springDataWebPropertiesProvider",
          "parameterTypes": [
            "java.util.Optional"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webConversionServiceProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocKotlinConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "kotlinCoroutinesReturnTypeParser",
          "parameterTypes": []
        },
        {
          "name": "nullableKotlinRequestParameterCustomizer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocUIConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.Optional"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.converters.AdditionalModelsConverter"
    },
    {
      "type": "org.springdoc.core.converters.FileSupportConverter"
    },
    {
      "type": "org.springdoc.core.converters.ModelConverterRegistrar"
    },
    {
      "type": "org.springdoc.core.converters.PolymorphicModelConverter"
    },
    {
      "type": "org.springdoc.core.converters.ResponseSupportConverter"
    },
    {
      "type": "org.springdoc.core.converters.SchemaPropertyDeprecatingConverter"
    },
    {
      "type": "org.springdoc.core.customizers.ParameterCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.PropertyCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.SpringDocCustomizers"
    },
    {
      "type": "org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer"
    },
    {
      "type": "org.springdoc.core.models.GroupedOpenApi"
    },
    {
      "type": "org.springdoc.core.parsers.KotlinCoroutinesReturnTypeParser"
    },
    {
      "type": "org.springdoc.core.parsers.ReturnTypeParser"
    },
    {
      "type": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties",
      "methods": [
        {
          "name": "setOperationsSorter",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPath",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setTagsSorter",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setTryItOutEnabled",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$Direction"
    },
    {
      "type": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$SwaggerUrl"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getApiDocs",
          "parameterTypes": []
        },
        {
          "name": "setApiDocs",
          "parameterTypes": [
            "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs",
      "methods": [
        {
          "name": "setPath",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs$OpenApiVersion"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$Cache"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$GroupConfig"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$Groups"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$DeprecatingConverter"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$PageableConverter"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$PolymorphicConverter"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$SortConverter"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$Webjars"
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setEnabled",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigProperties$Csrf"
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigProperties$SyntaxHighlight"
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiOAuthProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.providers.ObjectMapperProvider"
    },
    {
      "type": "org.springdoc.core.providers.RouterFunctionProvider"
    },
    {
      "type": "org.springdoc.core.providers.SpringDataWebPropertiesProvider"
    },
    {
      "type": "org.springdoc.core.providers.SpringDocProviders"
    },
    {
      "type": "org.springdoc.core.providers.SpringWebProvider"
    },
    {
      "type": "org.springdoc.core.providers.WebConversionServiceProvider"
    },
    {
      "type": "org.springdoc.core.service.AbstractRequestService"
    },
    {
      "type": "org.springdoc.core.service.GenericParameterService"
    },
    {
      "type": "org.springdoc.core.service.GenericResponseService"
    },
    {
      "type": "org.springdoc.core.service.OpenAPIService"
    },
    {
      "type": "org.springdoc.core.service.OperationService"
    },
    {
      "type": "org.springdoc.core.service.RequestBodyService"
    },
    {
      "type": "org.springdoc.core.service.SecurityService"
    },
    {
      "type": "org.springdoc.core.utils.PropertyResolverUtils"
    },
    {
      "type": "org.springdoc.ui.AbstractSwaggerIndexTransformer"
    },
    {
      "type": "org.springdoc.ui.AbstractSwaggerResourceResolver"
    },
    {
      "type": "org.springdoc.ui.AbstractSwaggerWelcome"
    },
    {
      "type": "org.springdoc.webmvc.api.OpenApiResource"
    },
    {
      "type": "org.springdoc.webmvc.api.OpenApiWebMvcResource"
    },
    {
      "type": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "openApiResource",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectFactory",
            "org.springdoc.core.service.AbstractRequestService",
            "org.springdoc.core.service.GenericResponseService",
            "org.springdoc.core.service.OperationService",
            "org.springdoc.core.properties.SpringDocConfigProperties",
            "org.springdoc.core.providers.SpringDocProviders",
            "org.springdoc.core.customizers.SpringDocCustomizers"
          ]
        },
        {
          "name": "requestBuilder",
          "parameterTypes": [
            "org.springdoc.core.service.GenericParameterService",
            "org.springdoc.core.service.RequestBodyService",
            "org.springdoc.core.service.OperationService",
            "java.util.Optional",
            "org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer"
          ]
        },
        {
          "name": "responseBuilder",
          "parameterTypes": [
            "org.springdoc.core.service.OperationService",
            "java.util.List",
            "org.springdoc.core.properties.SpringDocConfigProperties",
            "org.springdoc.core.utils.PropertyResolverUtils"
          ]
        },
        {
          "name": "springWebProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "routerFunctionProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.webmvc.core.providers.RouterFunctionWebMvcProvider"
    },
    {
      "type": "org.springdoc.webmvc.core.providers.SpringWebMvcProvider"
    },
    {
      "type": "org.springdoc.webmvc.core.service.RequestService"
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "indexPageTransformer",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigProperties",
            "org.springdoc.core.properties.SwaggerUiOAuthProperties",
            "org.springdoc.core.properties.SwaggerUiConfigParameters",
            "org.springdoc.webmvc.ui.SwaggerWelcomeCommon",
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "swaggerConfigResource",
          "parameterTypes": [
            "org.springdoc.webmvc.ui.SwaggerWelcomeCommon"
          ]
        },
        {
          "name": "swaggerResourceResolver",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigProperties"
          ]
        },
        {
          "name": "swaggerWebMvcConfigurer",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigParameters",
            "org.springdoc.webmvc.ui.SwaggerIndexTransformer",
            "java.util.Optional",
            "org.springdoc.webmvc.ui.SwaggerResourceResolver"
          ]
        },
        {
          "name": "swaggerWelcome",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigProperties",
            "org.springdoc.core.properties.SpringDocConfigProperties",
            "org.springdoc.core.properties.SwaggerUiConfigParameters",
            "org.springdoc.core.providers.SpringWebProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerConfigResource"
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerIndexPageTransformer"
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerIndexTransformer"
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerResourceResolver"
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer"
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerWelcomeCommon"
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc"
    },
    {
      "type": "org.springframework.aop.PointcutAdvisor"
    },
    {
      "type": "org.springframework.aop.SpringProxy"
    },
    {
      "type": "org.springframework.aop.TargetClassAware"
    },
    {
      "type": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor"
    },
    {
      "type": "org.springframework.aop.framework.Advised"
    },
    {
      "type": "org.springframework.aop.framework.AopConfigException"
    },
    {
      "type": "org.springframework.aop.framework.AopInfrastructureBean"
    },
    {
      "type": "org.springframework.aop.framework.ProxyConfig",
      "methods": [
        {
          "name": "setProxyTargetClass",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.ProxyProcessorSupport",
      "methods": [
        {
          "name": "setOrder",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator"
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator"
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor"
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aop.scope.ScopedObject"
    },
    {
      "type": "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor"
    },
    {
      "type": "org.springframework.aop.support.AbstractPointcutAdvisor"
    },
    {
      "type": "org.springframework.aot.generate.Generated"
    },
    {
      "type": "org.springframework.aot.hint.annotation.Reflective"
    },
    {
      "type": "org.springframework.batch.core.launch.JobLauncher"
    },
    {
      "type": "org.springframework.beans.factory.Aware"
    },
    {
      "type": "org.springframework.beans.factory.BeanClassLoaderAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanFactoryAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanNameAware"
    },
    {
      "type": "org.springframework.beans.factory.DisposableBean"
    },
    {
      "type": "org.springframework.beans.factory.FactoryBean"
    },
    {
      "type": "org.springframework.beans.factory.InitializingBean"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Autowired"
    },
    {
      "type": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.beans.factory.annotation.Qualifier"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Value"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanRegistrationAotProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.support.NullBean"
    },
    {
      "type": "org.springframework.boot.ApplicationProperties"
    },
    {
      "type": "org.springframework.boot.Banner$Mode"
    },
    {
      "type": "org.springframework.boot.ClearCachesApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.SpringBootConfiguration"
    },
    {
      "type": "org.springframework.boot.WebApplicationType"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping"
    },
    {
      "type": "org.springframework.boot.ansi.AnsiOutput$Enabled"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackage"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureAfter"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureBefore"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureOrder"
    },
    {
      "type": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.EnableAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.SpringBootApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "forceAutoProxyCreatorToUseClassProxying",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationAvailability",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheType"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnBooleanProperty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnCheckpointRestore"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnExpression"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnThreading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnExpressionCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnThreadingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWarDeploymentCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.SearchStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultLifecycleProcessor",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.context.LifecycleProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "propertySourcesPlaceholderConfigurer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "persistenceExceptionTranslationPostProcessor",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.ConditionalOnPreferredJsonMapper"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.ConditionalOnPreferredJsonMapper$JsonMapper"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConverters"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "messageConverters",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$HttpMessageConvertersAutoConfigurationRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "stringHttpMessageConverter",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "mappingJackson2HttpMessageConverter",
          "parameterTypes": [
            "com.fasterxml.jackson.databind.ObjectMapper"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.OnPreferredJsonMapperCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.AbstractHttpClientProperties"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.AbstractHttpClientProperties$Ssl"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.AbstractHttpRequestFactoryProperties"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.AbstractHttpRequestFactoryProperties$Factory"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.autoconfigure.http.client.HttpClientProperties"
          ]
        },
        {
          "name": "clientHttpRequestFactoryBuilder",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "clientHttpRequestFactorySettings",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.HttpClientProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build"
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git"
    },
    {
      "type": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jsonComponentModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "standardJacksonObjectMapperBuilderCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jsonMixinModule",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.jackson.JsonMixinModuleEntries"
          ]
        },
        {
          "name": "jsonMixinModuleEntries",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonObjectMapperBuilder",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonObjectMapper",
          "parameterTypes": [
            "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "parameterNamesModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$Datatype"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceAvailableCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jdbcConnectionDetails",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceCheckpointRestoreConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Dbcp2"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dataSource",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
            "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails",
            "org.springframework.core.env.Environment"
          ]
        },
        {
          "name": "jdbcConnectionDetailsHikariBeanPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$OracleUcp"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Tomcat"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setDriverClassName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "transactionManager",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "javax.sql.DataSource",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.HikariJdbcConnectionDetailsBeanPostProcessor"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jdbcClient",
          "parameterTypes": [
            "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jdbcTemplate",
          "parameterTypes": [
            "javax.sql.DataSource",
            "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "namedParameterJdbcTemplate",
          "parameterTypes": [
            "org.springframework.jdbc.core.JdbcTemplate"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariDataSourcePoolMetadataRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "hikariPoolDataSourceMetadataProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.service.connection.ConnectionDetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dataSourceScriptDatabaseInitializer",
          "parameterTypes": [
            "javax.sql.DataSource",
            "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getSchemaLocations",
          "parameterTypes": []
        },
        {
          "name": "setMode",
          "parameterTypes": [
            "org.springframework.boot.sql.init.DatabaseInitializationMode"
          ]
        },
        {
          "name": "setSchemaLocations",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.FileWatcher"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader",
            "org.springframework.boot.autoconfigure.ssl.SslProperties"
          ]
        },
        {
          "name": "fileWatcher",
          "parameterTypes": []
        },
        {
          "name": "sslBundleRegistry",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "sslPropertiesSslBundleRegistrar",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.ssl.FileWatcher"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch$File"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Mode"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool$Shutdown"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Simple"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$AsyncConfigurerConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationTaskExecutorAsyncConfigurer",
          "parameterTypes": [
            "org.springframework.beans.factory.BeanFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$AsyncConfigurerConfiguration$1"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$BootstrapExecutorConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "bootstrapExecutorAliasPostProcessor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$OnExecutorCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "simpleAsyncTaskExecutorBuilder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationTaskExecutor",
          "parameterTypes": [
            "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "threadPoolTaskExecutorBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "simpleAsyncTaskSchedulerBuilder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "threadPoolTaskSchedulerBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Simple"
    },
    {
      "type": "org.springframework.boot.autoconfigure.thread.Threading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "transactionTemplate",
          "parameterTypes": [
            "org.springframework.transaction.PlatformTransactionManager"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "platformTransactionManagerCustomizers",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "transactionExecutionListeners",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers"
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultValidator",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "methodValidationPostProcessor",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidatorAdapter"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ErrorProperties"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getCompression",
          "parameterTypes": []
        },
        {
          "name": "getJetty",
          "parameterTypes": []
        },
        {
          "name": "getMaxHttpRequestHeaderSize",
          "parameterTypes": []
        },
        {
          "name": "getNetty",
          "parameterTypes": []
        },
        {
          "name": "getTomcat",
          "parameterTypes": []
        },
        {
          "name": "getUndertow",
          "parameterTypes": []
        },
        {
          "name": "setPort",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty",
      "methods": [
        {
          "name": "getMaxHttpFormPostSize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$Format"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty",
      "methods": [
        {
          "name": "getH2cMaxContentLength",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive$Session"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
      "methods": [
        {
          "name": "getMaxHttpFormPostSize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$UseApr"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow",
      "methods": [
        {
          "name": "getBufferSize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.AutoConfiguredRestClientSsl"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "httpMessageConvertersRestClientCustomizer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "restClientBuilderConfigurer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "restClientSsl",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.ssl.SslBundles"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientSsl"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "tomcatWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.format.WebConversionService"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dispatcherServlet",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dispatcherServletRegistration",
          "parameterTypes": [
            "org.springframework.web.servlet.DispatcherServlet",
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        },
        {
          "name": "characterEncodingFilter",
          "parameterTypes": []
        },
        {
          "name": "localeCharsetMappingsCustomizer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
          ]
        },
        {
          "name": "multipartConfigElement",
          "parameterTypes": []
        },
        {
          "name": "multipartResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getFileSizeThreshold",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "servletWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "tomcatServletWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedJetty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "tomcatServletWebServerFactory",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "formContentFilter",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ListableBeanFactory"
          ]
        },
        {
          "name": "flashMapManager",
          "parameterTypes": []
        },
        {
          "name": "localeResolver",
          "parameterTypes": []
        },
        {
          "name": "mvcContentNegotiationManager",
          "parameterTypes": []
        },
        {
          "name": "mvcConversionService",
          "parameterTypes": []
        },
        {
          "name": "mvcValidator",
          "parameterTypes": []
        },
        {
          "name": "themeResolver",
          "parameterTypes": []
        },
        {
          "name": "viewNameTranslator",
          "parameterTypes": []
        },
        {
          "name": "welcomePageHandlerMapping",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "welcomePageNotAcceptableHandlerMapping",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
            "org.springframework.beans.factory.ListableBeanFactory",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "defaultViewResolver",
          "parameterTypes": []
        },
        {
          "name": "requestContextFilter",
          "parameterTypes": []
        },
        {
          "name": "viewResolver",
          "parameterTypes": [
            "org.springframework.beans.factory.BeanFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$MatchingStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Problemdetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageNotAcceptableHandlerMapping"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
      "methods": [
        {
          "name": "error",
          "parameterTypes": [
            "jakarta.servlet.http.HttpServletRequest"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        },
        {
          "name": "basicErrorController",
          "parameterTypes": [
            "org.springframework.boot.web.servlet.error.ErrorAttributes",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "errorAttributes",
          "parameterTypes": []
        },
        {
          "name": "errorPageCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
          ]
        },
        {
          "name": "preserveErrorControllerTargetClassPostProcessor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.autoconfigure.web.WebProperties"
          ]
        },
        {
          "name": "conventionErrorViewResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$StaticView"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "beanNameViewResolver",
          "parameterTypes": []
        },
        {
          "name": "defaultErrorView",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver"
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "websocketServletWebServerCustomizer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailability"
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailabilityBean"
    },
    {
      "type": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.FileEncodingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.TypeExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.ConfigurableBootstrapContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataLocation"
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataLocation[]"
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataNotFoundAction"
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataProperties"
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.context.properties.bind.Binder",
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.SystemEnvironmentConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.SystemEnvironmentConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.event.EventPublishingRunListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.SpringApplication",
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.BoundConfigurationProperties",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.NestedConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.BindResult"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Name"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Nested"
    },
    {
      "type": "org.springframework.boot.convert.DurationUnit"
    },
    {
      "type": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.PropertiesPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.YamlPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.http.client.AbstractClientHttpRequestFactoryBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.ClientHttpRequestFactorySettings"
    },
    {
      "type": "org.springframework.boot.http.client.HttpRedirects"
    },
    {
      "type": "org.springframework.boot.http.client.JdkClientHttpRequestFactoryBuilder"
    },
    {
      "type": "org.springframework.boot.io.Base64ProtocolResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.io.ClassPathResourceFilePathResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.io.ProtocolResolverApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jackson.JsonComponentModule"
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModule"
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModuleEntries"
    },
    {
      "type": "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
    },
    {
      "type": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer"
    },
    {
      "type": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider"
    },
    {
      "type": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.loader.launch.LaunchedClassLoader"
    },
    {
      "type": "org.springframework.boot.logging.LogLevelEditor"
    },
    {
      "type": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.RootLogLevelConfigurator"
    },
    {
      "type": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer"
    },
    {
      "type": "org.springframework.boot.sql.init.DatabaseInitializationModeEditor"
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.ssl.DefaultSslBundleRegistry"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundleRegistry"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundles"
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder"
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder"
    },
    {
      "type": "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"
    },
    {
      "type": "org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor"
    },
    {
      "type": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
      "methods": [
        {
          "name": "byAnnotation",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.client.RestClientCustomizer"
    },
    {
      "type": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.reactive.context.FilteredReactiveWebContextResourceFilePathResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.Compression",
      "methods": [
        {
          "name": "getMinResponseSize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.server.ConfigurableWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.Cookie"
    },
    {
      "type": "org.springframework.boot.web.server.Cookie$SameSite"
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPageRegistrar"
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPageRegistry"
    },
    {
      "type": "org.springframework.boot.web.server.Http2"
    },
    {
      "type": "org.springframework.boot.web.server.Shutdown"
    },
    {
      "type": "org.springframework.boot.web.server.Ssl"
    },
    {
      "type": "org.springframework.boot.web.server.Ssl$ClientAuth"
    },
    {
      "type": "org.springframework.boot.web.server.Ssl$ServerNameSslBundle"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizer"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.DynamicRegistrationBean"
    },
    {
      "type": "org.springframework.boot.web.servlet.FilterRegistrationBean"
    },
    {
      "type": "org.springframework.boot.web.servlet.RegistrationBean"
    },
    {
      "type": "org.springframework.boot.web.servlet.ServletContextInitializer"
    },
    {
      "type": "org.springframework.boot.web.servlet.ServletRegistrationBean"
    },
    {
      "type": "org.springframework.boot.web.servlet.WebListenerRegistry"
    },
    {
      "type": "org.springframework.boot.web.servlet.context.ServletContextResourceFilePathResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes"
    },
    {
      "type": "org.springframework.boot.web.servlet.error.ErrorAttributes"
    },
    {
      "type": "org.springframework.boot.web.servlet.error.ErrorController"
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter"
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedFilter"
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter"
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Encoding",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Jsp"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Session"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Session$Cookie"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Session$SessionTrackingMode"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.SessionStoreDirectory"
    },
    {
      "type": "org.springframework.cache.Cache"
    },
    {
      "type": "org.springframework.cache.CacheManager"
    },
    {
      "type": "org.springframework.cache.interceptor.CacheAspectSupport"
    },
    {
      "type": "org.springframework.cglib.proxy.Dispatcher"
    },
    {
      "type": "org.springframework.cglib.proxy.MethodInterceptor"
    },
    {
      "type": "org.springframework.cglib.proxy.NoOp"
    },
    {
      "type": "org.springframework.cloud.function.web.function.FunctionEndpointInitializer"
    },
    {
      "type": "org.springframework.context.ApplicationContextAware"
    },
    {
      "type": "org.springframework.context.ApplicationListener"
    },
    {
      "type": "org.springframework.context.ApplicationStartupAware"
    },
    {
      "type": "org.springframework.context.EmbeddedValueResolverAware"
    },
    {
      "type": "org.springframework.context.EnvironmentAware"
    },
    {
      "type": "org.springframework.context.Lifecycle"
    },
    {
      "type": "org.springframework.context.LifecycleProcessor"
    },
    {
      "type": "org.springframework.context.Phased"
    },
    {
      "type": "org.springframework.context.ResourceLoaderAware"
    },
    {
      "type": "org.springframework.context.SmartLifecycle"
    },
    {
      "type": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.AutoProxyRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.Bean"
    },
    {
      "type": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan"
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan$Filter"
    },
    {
      "type": "org.springframework.context.annotation.Conditional"
    },
    {
      "type": "org.springframework.context.annotation.Configuration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setMetadataReaderFactory",
          "parameterTypes": [
            "org.springframework.core.type.classreading.MetadataReaderFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.Import"
    },
    {
      "type": "org.springframework.context.annotation.ImportAware"
    },
    {
      "type": "org.springframework.context.annotation.ImportRuntimeHints"
    },
    {
      "type": "org.springframework.context.annotation.Lazy"
    },
    {
      "type": "org.springframework.context.annotation.Primary"
    },
    {
      "type": "org.springframework.context.annotation.Role"
    },
    {
      "type": "org.springframework.context.annotation.Scope"
    },
    {
      "type": "org.springframework.context.event.DefaultEventListenerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.event.EventListenerMethodProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.support.ApplicationObjectSupport"
    },
    {
      "type": "org.springframework.context.support.DefaultLifecycleProcessor"
    },
    {
      "type": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
    },
    {
      "type": "org.springframework.core.DefaultParameterNameDiscoverer"
    },
    {
      "type": "org.springframework.core.Ordered"
    },
    {
      "type": "org.springframework.core.ParameterNameDiscoverer"
    },
    {
      "type": "org.springframework.core.PrioritizedParameterNameDiscoverer"
    },
    {
      "type": "org.springframework.core.PriorityOrdered"
    },
    {
      "type": "org.springframework.core.annotation.AliasFor"
    },
    {
      "type": "org.springframework.core.annotation.AnnotationAttributes[]"
    },
    {
      "type": "org.springframework.core.annotation.Order"
    },
    {
      "type": "org.springframework.core.annotation.TypeMappedAnnotation[]"
    },
    {
      "type": "org.springframework.core.convert.ConversionService"
    },
    {
      "type": "org.springframework.core.convert.converter.ConverterRegistry"
    },
    {
      "type": "org.springframework.core.convert.support.ConfigurableConversionService"
    },
    {
      "type": "org.springframework.core.convert.support.GenericConversionService"
    },
    {
      "type": "org.springframework.core.env.EnvironmentCapable"
    },
    {
      "type": "org.springframework.core.task.AsyncListenableTaskExecutor"
    },
    {
      "type": "org.springframework.core.task.AsyncTaskExecutor"
    },
    {
      "type": "org.springframework.core.task.TaskExecutor"
    },
    {
      "type": "org.springframework.core.type.classreading.MetadataReaderFactory"
    },
    {
      "type": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"
    },
    {
      "type": "org.springframework.data.cassandra.ReactiveSession"
    },
    {
      "type": "org.springframework.data.domain.Pageable"
    },
    {
      "type": "org.springframework.data.domain.Sort"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
    },
    {
      "type": "org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
    },
    {
      "type": "org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration"
    },
    {
      "type": "org.springframework.data.jpa.repository.JpaRepository"
    },
    {
      "type": "org.springframework.data.ldap.repository.LdapRepository"
    },
    {
      "type": "org.springframework.data.querydsl.binding.QuerydslBindingsFactory"
    },
    {
      "type": "org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    {
      "type": "org.springframework.data.redis.core.RedisOperations"
    },
    {
      "type": "org.springframework.data.redis.repository.configuration.EnableRedisRepositories"
    },
    {
      "type": "org.springframework.data.rest.core.config.RepositoryRestConfiguration"
    },
    {
      "type": "org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter"
    },
    {
      "type": "org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
    },
    {
      "type": "org.springframework.data.web.PageableHandlerMethodArgumentResolver"
    },
    {
      "type": "org.springframework.format.FormatterRegistry"
    },
    {
      "type": "org.springframework.format.support.DefaultFormattingConversionService"
    },
    {
      "type": "org.springframework.format.support.FormattingConversionService"
    },
    {
      "type": "org.springframework.hateoas.EntityModel"
    },
    {
      "type": "org.springframework.hateoas.server.LinkRelationProvider"
    },
    {
      "type": "org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter"
    },
    {
      "type": "org.springframework.http.HttpStatus"
    },
    {
      "type": "org.springframework.http.MediaType"
    },
    {
      "type": "org.springframework.http.ReactiveHttpInputMessage"
    },
    {
      "type": "org.springframework.http.client.ClientHttpRequestFactory"
    },
    {
      "type": "org.springframework.http.codec.CodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
    },
    {
      "type": "org.springframework.http.converter.AbstractGenericHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.AbstractHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.GenericHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.HttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.StringHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.json.GsonHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    {
      "type": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"
    },
    {
      "type": "org.springframework.http.server.reactive.HttpHandler"
    },
    {
      "type": "org.springframework.integration.config.EnableIntegration"
    },
    {
      "type": "org.springframework.jdbc.core.JdbcOperations"
    },
    {
      "type": "org.springframework.jdbc.core.JdbcTemplate"
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations"
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
    },
    {
      "type": "org.springframework.jdbc.core.simple.DefaultJdbcClient"
    },
    {
      "type": "org.springframework.jdbc.core.simple.JdbcClient"
    },
    {
      "type": "org.springframework.jdbc.datasource.DataSourceTransactionManager"
    },
    {
      "type": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
    },
    {
      "type": "org.springframework.jdbc.datasource.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.jdbc.support.JdbcAccessor"
    },
    {
      "type": "org.springframework.jdbc.support.JdbcTransactionManager"
    },
    {
      "type": "org.springframework.jms.core.JmsTemplate"
    },
    {
      "type": "org.springframework.jmx.export.MBeanExporter"
    },
    {
      "type": "org.springframework.kafka.core.KafkaTemplate"
    },
    {
      "type": "org.springframework.ldap.core.ContextSource"
    },
    {
      "type": "org.springframework.mail.javamail.JavaMailSenderImpl"
    },
    {
      "type": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
    },
    {
      "type": "org.springframework.oxm.Marshaller"
    },
    {
      "type": "org.springframework.r2dbc.connection.R2dbcTransactionManager"
    },
    {
      "type": "org.springframework.r2dbc.connection.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.scheduling.SchedulingTaskExecutor"
    },
    {
      "type": "org.springframework.scheduling.annotation.AsyncConfigurer"
    },
    {
      "type": "org.springframework.scheduling.concurrent.CustomizableThreadFactory"
    },
    {
      "type": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport"
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
    },
    {
      "type": "org.springframework.security.authentication.AuthenticationManager"
    },
    {
      "type": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher"
    },
    {
      "type": "org.springframework.security.authentication.ReactiveAuthenticationManager"
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"
    },
    {
      "type": "org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"
    },
    {
      "type": "org.springframework.security.config.http.SessionCreationPolicy"
    },
    {
      "type": "org.springframework.security.oauth2.client.registration.ClientRegistration"
    },
    {
      "type": "org.springframework.security.oauth2.server.authorization.OAuth2Authorization"
    },
    {
      "type": "org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
    },
    {
      "type": "org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
    },
    {
      "type": "org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
    },
    {
      "type": "org.springframework.security.web.SecurityFilterChain"
    },
    {
      "type": "org.springframework.session.Session"
    },
    {
      "type": "org.springframework.stereotype.Component"
    },
    {
      "type": "org.springframework.stereotype.Controller"
    },
    {
      "type": "org.springframework.stereotype.Indexed"
    },
    {
      "type": "org.springframework.stereotype.Repository"
    },
    {
      "type": "org.springframework.stereotype.Service"
    },
    {
      "type": "org.springframework.transaction.ConfigurableTransactionManager"
    },
    {
      "type": "org.springframework.transaction.PlatformTransactionManager"
    },
    {
      "type": "org.springframework.transaction.ReactiveTransactionManager"
    },
    {
      "type": "org.springframework.transaction.TransactionDefinition"
    },
    {
      "type": "org.springframework.transaction.TransactionManager"
    },
    {
      "type": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
      "methods": [
        {
          "name": "transactionAttributeSource",
          "parameterTypes": []
        },
        {
          "name": "transactionalEventListenerFactory",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"
    },
    {
      "type": "org.springframework.transaction.annotation.EnableTransactionManagement"
    },
    {
      "type": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "transactionAdvisor",
          "parameterTypes": [
            "org.springframework.transaction.interceptor.TransactionAttributeSource",
            "org.springframework.transaction.interceptor.TransactionInterceptor"
          ]
        },
        {
          "name": "transactionInterceptor",
          "parameterTypes": [
            "org.springframework.transaction.interceptor.TransactionAttributeSource"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.transaction.annotation.RestrictedTransactionalEventListenerFactory"
    },
    {
      "type": "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.transaction.annotation.TransactionRuntimeHints"
    },
    {
      "type": "org.springframework.transaction.annotation.Transactional"
    },
    {
      "type": "org.springframework.transaction.aspectj.AbstractTransactionAspect"
    },
    {
      "type": "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource"
    },
    {
      "type": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor"
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionAspectSupport"
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionAttributeSource"
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionInterceptor"
    },
    {
      "type": "org.springframework.transaction.support.AbstractPlatformTransactionManager"
    },
    {
      "type": "org.springframework.transaction.support.DefaultTransactionDefinition"
    },
    {
      "type": "org.springframework.transaction.support.ResourceTransactionManager"
    },
    {
      "type": "org.springframework.transaction.support.TransactionOperations"
    },
    {
      "type": "org.springframework.transaction.support.TransactionTemplate"
    },
    {
      "type": "org.springframework.util.AntPathMatcher"
    },
    {
      "type": "org.springframework.util.ConcurrentReferenceHashMap$Segment[]"
    },
    {
      "type": "org.springframework.util.CustomizableThreadCreator"
    },
    {
      "type": "org.springframework.util.PathMatcher"
    },
    {
      "type": "org.springframework.util.unit.DataSize"
    },
    {
      "type": "org.springframework.validation.DefaultMessageCodesResolver$Format"
    },
    {
      "type": "org.springframework.validation.SmartValidator"
    },
    {
      "type": "org.springframework.validation.Validator"
    },
    {
      "type": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"
    },
    {
      "type": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor"
    },
    {
      "type": "org.springframework.validation.beanvalidation.SpringValidatorAdapter"
    },
    {
      "type": "org.springframework.web.accept.ContentNegotiationManager"
    },
    {
      "type": "org.springframework.web.accept.ContentNegotiationStrategy"
    },
    {
      "type": "org.springframework.web.accept.MediaTypeFileExtensionResolver"
    },
    {
      "type": "org.springframework.web.bind.annotation.ControllerAdvice"
    },
    {
      "type": "org.springframework.web.bind.annotation.ExceptionHandler"
    },
    {
      "type": "org.springframework.web.bind.annotation.GetMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.Mapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.PostMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestBody"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestMethod[]"
    },
    {
      "type": "org.springframework.web.bind.annotation.ResponseBody"
    },
    {
      "type": "org.springframework.web.bind.annotation.ResponseStatus"
    },
    {
      "type": "org.springframework.web.bind.annotation.RestController"
    },
    {
      "type": "org.springframework.web.bind.annotation.RestControllerAdvice"
    },
    {
      "type": "org.springframework.web.client.RestClient"
    },
    {
      "type": "org.springframework.web.client.RestClientException"
    },
    {
      "type": "org.springframework.web.client.RestTemplate"
    },
    {
      "type": "org.springframework.web.context.ConfigurableWebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.ServletContextAware"
    },
    {
      "type": "org.springframework.web.context.WebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.request.RequestContextListener"
    },
    {
      "type": "org.springframework.web.context.support.GenericWebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.support.ServletContextResource"
    },
    {
      "type": "org.springframework.web.context.support.WebApplicationObjectSupport"
    },
    {
      "type": "org.springframework.web.filter.CharacterEncodingFilter"
    },
    {
      "type": "org.springframework.web.filter.FormContentFilter"
    },
    {
      "type": "org.springframework.web.filter.GenericFilterBean"
    },
    {
      "type": "org.springframework.web.filter.OncePerRequestFilter"
    },
    {
      "type": "org.springframework.web.filter.RequestContextFilter"
    },
    {
      "type": "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver"
    },
    {
      "type": "org.springframework.web.method.support.CompositeUriComponentsContributor"
    },
    {
      "type": "org.springframework.web.method.support.UriComponentsContributor"
    },
    {
      "type": "org.springframework.web.multipart.MultipartResolver"
    },
    {
      "type": "org.springframework.web.multipart.support.StandardServletMultipartResolver"
    },
    {
      "type": "org.springframework.web.reactive.DispatcherHandler"
    },
    {
      "type": "org.springframework.web.reactive.HandlerResult"
    },
    {
      "type": "org.springframework.web.reactive.config.WebFluxConfigurer"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClientException"
    },
    {
      "type": "org.springframework.web.servlet.DispatcherServlet"
    },
    {
      "type": "org.springframework.web.servlet.FlashMapManager"
    },
    {
      "type": "org.springframework.web.servlet.FrameworkServlet"
    },
    {
      "type": "org.springframework.web.servlet.HandlerAdapter"
    },
    {
      "type": "org.springframework.web.servlet.HandlerExceptionResolver"
    },
    {
      "type": "org.springframework.web.servlet.HandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.HttpServletBean"
    },
    {
      "type": "org.springframework.web.servlet.LocaleResolver"
    },
    {
      "type": "org.springframework.web.servlet.RequestToViewNameTranslator"
    },
    {
      "type": "org.springframework.web.servlet.ThemeResolver"
    },
    {
      "type": "org.springframework.web.servlet.View"
    },
    {
      "type": "org.springframework.web.servlet.ViewResolver"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
      "methods": [
        {
          "name": "setConfigurers",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
      "methods": [
        {
          "name": "beanNameHandlerMapping",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "defaultServletHandlerMapping",
          "parameterTypes": []
        },
        {
          "name": "handlerExceptionResolver",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager"
          ]
        },
        {
          "name": "handlerFunctionAdapter",
          "parameterTypes": []
        },
        {
          "name": "httpRequestHandlerAdapter",
          "parameterTypes": []
        },
        {
          "name": "mvcPathMatcher",
          "parameterTypes": []
        },
        {
          "name": "mvcPatternParser",
          "parameterTypes": []
        },
        {
          "name": "mvcResourceUrlProvider",
          "parameterTypes": []
        },
        {
          "name": "mvcUriComponentsContributor",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
          ]
        },
        {
          "name": "mvcUrlPathHelper",
          "parameterTypes": []
        },
        {
          "name": "mvcViewResolver",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager"
          ]
        },
        {
          "name": "requestMappingHandlerAdapter",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.validation.Validator"
          ]
        },
        {
          "name": "requestMappingHandlerMapping",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "resourceHandlerMapping",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "routerFunctionMapping",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "simpleControllerHandlerAdapter",
          "parameterTypes": []
        },
        {
          "name": "viewControllerHandlerMapping",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.function.RouterFunction"
    },
    {
      "type": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter"
    },
    {
      "type": "org.springframework.web.servlet.function.support.RouterFunctionMapping"
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping"
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler"
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.handler.HandlerExceptionResolverComposite"
    },
    {
      "type": "org.springframework.web.servlet.handler.MatchableHandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.i18n.AbstractLocaleResolver"
    },
    {
      "type": "org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver"
    },
    {
      "type": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter"
    },
    {
      "type": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceResolver"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceTransformer"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceUrlProvider"
    },
    {
      "type": "org.springframework.web.servlet.support.AbstractFlashMapManager"
    },
    {
      "type": "org.springframework.web.servlet.support.SessionFlashMapManager"
    },
    {
      "type": "org.springframework.web.servlet.support.WebContentGenerator"
    },
    {
      "type": "org.springframework.web.servlet.theme.AbstractThemeResolver"
    },
    {
      "type": "org.springframework.web.servlet.theme.FixedThemeResolver"
    },
    {
      "type": "org.springframework.web.servlet.view.AbstractCachingViewResolver"
    },
    {
      "type": "org.springframework.web.servlet.view.BeanNameViewResolver"
    },
    {
      "type": "org.springframework.web.servlet.view.ContentNegotiatingViewResolver"
    },
    {
      "type": "org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator"
    },
    {
      "type": "org.springframework.web.servlet.view.InternalResourceViewResolver"
    },
    {
      "type": "org.springframework.web.servlet.view.UrlBasedViewResolver"
    },
    {
      "type": "org.springframework.web.servlet.view.ViewResolverComposite"
    },
    {
      "type": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer"
    },
    {
      "type": "org.springframework.web.util.UrlPathHelper"
    },
    {
      "type": "org.springframework.web.util.pattern.PathPatternParser"
    },
    {
      "type": "org.springframework.ws.transport.http.MessageDispatcherServlet"
    },
    {
      "type": "org.sqlite.BusyHandler",
      "jniAccessible": true,
      "methods": [
        {
          "name": "callback",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "org.sqlite.Collation",
      "jniAccessible": true,
      "methods": [
        {
          "name": "xCompare",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.sqlite.Function",
      "jniAccessible": true,
      "fields": [
        {
          "name": "args"
        },
        {
          "name": "context"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "xFunc",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.sqlite.Function$Aggregate",
      "jniAccessible": true,
      "methods": [
        {
          "name": "clone",
          "parameterTypes": []
        },
        {
          "name": "xFinal",
          "parameterTypes": []
        },
        {
          "name": "xStep",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.sqlite.Function$Window",
      "jniAccessible": true,
      "methods": [
        {
          "name": "xInverse",
          "parameterTypes": []
        },
        {
          "name": "xValue",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.sqlite.JDBC",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.sqlite.ProgressHandler",
      "jniAccessible": true,
      "methods": [
        {
          "name": "progress",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.sqlite.core.DB",
      "jniAccessible": true,
      "methods": [
        {
          "name": "onCommit",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "onUpdate",
          "parameterTypes": [
            "int",
            "java.lang.String",
            "java.lang.String",
            "long"
          ]
        },
        {
          "name": "throwex",
          "parameterTypes": []
        },
        {
          "name": "throwex",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "org.sqlite.core.DB$ProgressObserver",
      "jniAccessible": true,
      "methods": [
        {
          "name": "progress",
          "parameterTypes": [
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "org.sqlite.core.NativeDB",
      "jniAccessible": true,
      "fields": [
        {
          "name": "busyHandler"
        },
        {
          "name": "commitListener"
        },
        {
          "name": "pointer"
        },
        {
          "name": "progressHandler"
        },
        {
          "name": "updateListener"
        }
      ],
      "methods": [
        {
          "name": "stringToUtf8ByteArray",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "throwex",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.telegram.telegrambots.meta.api.interfaces.BotApiObject"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.interfaces.Validable"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.methods.botapimethods.BotApiMethod"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.methods.botapimethods.BotApiMethodMessage"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.methods.botapimethods.PartialBotApiMethod"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.methods.send.SendMessage",
      "methods": [
        {
          "name": "getAllowSendingWithoutReply",
          "parameterTypes": []
        },
        {
          "name": "getChatId",
          "parameterTypes": []
        },
        {
          "name": "getDisableNotification",
          "parameterTypes": []
        },
        {
          "name": "getDisableWebPagePreview",
          "parameterTypes": []
        },
        {
          "name": "getEntities",
          "parameterTypes": []
        },
        {
          "name": "getLinkPreviewOptions",
          "parameterTypes": []
        },
        {
          "name": "getMessageThreadId",
          "parameterTypes": []
        },
        {
          "name": "getMethod",
          "parameterTypes": []
        },
        {
          "name": "getParseMode",
          "parameterTypes": []
        },
        {
          "name": "getProtectContent",
          "parameterTypes": []
        },
        {
          "name": "getReplyMarkup",
          "parameterTypes": []
        },
        {
          "name": "getReplyParameters",
          "parameterTypes": []
        },
        {
          "name": "getReplyToMessageId",
          "parameterTypes": []
        },
        {
          "name": "getText",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.ApiResponse",
      "fields": [
        {
          "name": "errorCode"
        },
        {
          "name": "errorDescription"
        },
        {
          "name": "ok"
        },
        {
          "name": "result"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.Audio"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.CallbackQuery"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.Chat$ChatBuilder",
      "methods": [
        {
          "name": "firstName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "id",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "lastName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "type",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "userName",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.Chat$ChatBuilderImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "build",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.ChatInviteLink"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.ChatJoinRequest"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.ChatLocation"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.ChatMemberUpdated"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.ChatPermissions"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.ChatPhoto"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.ChatShared"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.Contact"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.Dice"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.Document"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.ExternalReplyInfo"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.File"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.LinkPreviewOptions"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.Location$LocationBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.Location$LocationBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.LoginUrl$LoginUrlBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.LoginUrl$LoginUrlBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.MessageAutoDeleteTimerChanged"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.MessageEntity$MessageEntityBuilder",
      "methods": [
        {
          "name": "length",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "offset",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "type",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.MessageEntity$MessageEntityBuilderImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "build",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.PhotoSize"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.ProximityAlertTriggered"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.ResponseParameters"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.TextQuote"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.Update",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setMessage",
          "parameterTypes": [
            "org.telegram.telegrambots.meta.api.objects.message.Message"
          ]
        },
        {
          "name": "setUpdateId",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        }
      ]
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.User$UserBuilder",
      "methods": [
        {
          "name": "firstName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "id",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "isBot",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "languageCode",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "lastName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "userName",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.User$UserBuilderImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "build",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.UserShared"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.UsersShared"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.Venue"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.Video"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.VideoNote"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.Voice"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.WriteAccessAllowed$WriteAccessAllowedBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.WriteAccessAllowed$WriteAccessAllowedBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.boost.ChatBoost$ChatBoostBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.boost.ChatBoost$ChatBoostBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.boost.ChatBoostAdded$ChatBoostAddedBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.boost.ChatBoostAdded$ChatBoostAddedBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.boost.ChatBoostRemoved$ChatBoostRemovedBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.boost.ChatBoostRemoved$ChatBoostRemovedBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.boost.ChatBoostSource"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.boost.ChatBoostUpdated$ChatBoostUpdatedBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.boost.ChatBoostUpdated$ChatBoostUpdatedBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.chatmember.ChatMember"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.forum.ForumTopicClosed"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.forum.ForumTopicCreated"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.forum.ForumTopicEdited"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.forum.ForumTopicReopened"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.forum.GeneralForumTopicHidden"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.forum.GeneralForumTopicUnhidden"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.games.Animation$AnimationBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.games.Animation$AnimationBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.games.CallbackGame"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.games.Game$GameBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.games.Game$GameBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.giveaway.Giveaway$GiveawayBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.giveaway.Giveaway$GiveawayBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.giveaway.GiveawayCompleted$GiveawayCompletedBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.giveaway.GiveawayCompleted$GiveawayCompletedBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.giveaway.GiveawayCreated$GiveawayCreatedBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.giveaway.GiveawayCreated$GiveawayCreatedBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.giveaway.GiveawayWinners$GiveawayWinnersBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.giveaway.GiveawayWinners$GiveawayWinnersBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.inlinequery.ChosenInlineQuery$ChosenInlineQueryBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.inlinequery.ChosenInlineQuery$ChosenInlineQueryBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.inlinequery.InlineQuery$InlineQueryBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.inlinequery.InlineQuery$InlineQueryBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.message.MaybeInaccessibleMessageDeserializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.message.Message$MessageBuilder",
      "methods": [
        {
          "name": "chat",
          "parameterTypes": [
            "org.telegram.telegrambots.meta.api.objects.Chat"
          ]
        },
        {
          "name": "date",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "entities",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "from",
          "parameterTypes": [
            "org.telegram.telegrambots.meta.api.objects.User"
          ]
        },
        {
          "name": "messageId",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "text",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.message.Message$MessageBuilderImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "build",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.messageorigin.MessageOrigin"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.passport.EncryptedCredentials"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.passport.EncryptedPassportElement"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.passport.PassportData"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.passport.PassportFile"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.payments.Invoice"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.payments.OrderInfo"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.payments.PreCheckoutQuery"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.payments.ShippingAddress"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.payments.ShippingQuery"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.payments.SuccessfulPayment"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.polls.Poll"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.polls.PollAnswer"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.polls.PollOption"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.reactions.MessageReactionCountUpdated$MessageReactionCountUpdatedBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.reactions.MessageReactionCountUpdated$MessageReactionCountUpdatedBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.reactions.MessageReactionUpdated$MessageReactionUpdatedBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.reactions.MessageReactionUpdated$MessageReactionUpdatedBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.reactions.ReactionCount$ReactionCountBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.reactions.ReactionCount$ReactionCountBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.reactions.ReactionType"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.replykeyboard.ForceReplyKeyboard"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup$InlineKeyboardMarkupBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup$InlineKeyboardMarkupBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboard"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardRemove"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton$InlineKeyboardButtonBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton$InlineKeyboardButtonBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton[]"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardRow"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.stickers.MaskPosition$MaskPositionBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.stickers.MaskPosition$MaskPositionBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.stickers.Sticker"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.stories.Story"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.videochat.VideoChatEnded"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.videochat.VideoChatParticipantsInvited"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.videochat.VideoChatScheduled$VideoChatScheduledBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.videochat.VideoChatScheduled$VideoChatScheduledBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.videochat.VideoChatStarted"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.webapp.WebAppData$WebAppDataBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.webapp.WebAppData$WebAppDataBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.webapp.WebAppInfo$WebAppInfoBuilder"
    },
    {
      "type": "org.telegram.telegrambots.meta.api.objects.webapp.WebAppInfo$WebAppInfoBuilderImpl"
    },
    {
      "type": "org.telegram.telegrambots.webhook.TelegramWebhookBot"
    },
    {
      "type": "org.thymeleaf.spring6.SpringTemplateEngine"
    },
    {
      "type": "org.webjars.WebJarAssetLocator"
    },
    {
      "type": "org.webjars.WebJarVersionLocator"
    },
    {
      "type": "org.xnio.SslClientAuthMode"
    },
    {
      "type": "reactor.core.publisher.Flux"
    },
    {
      "type": "reactor.core.publisher.Hooks"
    },
    {
      "type": "reactor.core.publisher.Mono"
    },
    {
      "type": "reactor.netty.http.client.HttpClient"
    },
    {
      "type": "reactor.netty.http.server.HttpServer"
    },
    {
      "type": "reactor.tools.agent.ReactorDebugAgent"
    },
    {
      "type": "sun.management.VMManagementImpl",
      "jniAccessible": true,
      "fields": [
        {
          "name": "compTimeMonitoringSupport"
        },
        {
          "name": "currentThreadCpuTimeSupport"
        },
        {
          "name": "objectMonitorUsageSupport"
        },
        {
          "name": "otherThreadCpuTimeSupport"
        },
        {
          "name": "remoteDiagnosticCommandsSupport"
        },
        {
          "name": "synchronizerUsageSupport"
        },
        {
          "name": "threadAllocatedMemorySupport"
        },
        {
          "name": "threadContentionMonitoringSupport"
        }
      ]
    },
    {
      "type": "sun.reflect.ReflectionFactory",
      "methods": [
        {
          "name": "getReflectionFactory",
          "parameterTypes": []
        },
        {
          "name": "newConstructorForSerialization",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.reflect.Constructor"
          ]
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA224withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA256withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA224",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.certpath.PKIXCertPathValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.PSSParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA224withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA256withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$TLSContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityInfoAccessExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.BasicConstraintsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CRLDistributionPointsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CertificatePoliciesExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.ExtendedKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.KeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.NetscapeCertTypeExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.PrivateKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.text.resources.cldr.FormatData"
    },
    {
      "type": "sun.text.resources.cldr.FormatData_en"
    },
    {
      "type": "sun.text.resources.cldr.FormatData_en_US"
    },
    {
      "type": "sun.util.resources.cldr.CalendarData"
    },
    {
      "type": "sun.util.resources.cldr.TimeZoneNames"
    },
    {
      "type": "sun.util.resources.cldr.TimeZoneNames_en"
    },
    {
      "type": "sun.util.resources.cldr.TimeZoneNames_en_US"
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.GenericArrayType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.ParameterizedType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.TypeVariable",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.WildcardType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.sql.Connection"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.context.properties.ConfigurationProperties"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.ControllerAdvice"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.ExceptionHandler"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.RequestMapping"
        ]
      }
    },
    {
      "type": {
        "lambda": {
          "declaringClass": "org.springdoc.core.configuration.SpringDocKotlinConfiguration",
          "interfaces": [
            "org.springdoc.core.customizers.ParameterCustomizer"
          ]
        }
      }
    },
    {
      "type": {
        "lambda": {
          "declaringClass": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
          "interfaces": [
            "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
          ]
        }
      }
    },
    {
      "type": {
        "lambda": {
          "declaringClass": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
          "interfaces": [
            "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider"
          ]
        }
      }
    },
    {
      "type": {
        "lambda": {
          "declaringClass": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$BootstrapExecutorConfiguration",
          "interfaces": [
            "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
          ]
        }
      }
    },
    {
      "type": {
        "lambda": {
          "declaringClass": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
          "interfaces": [
            "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
          ]
        }
      }
    }
  ],
  "resources": [
    {
      "glob": ".env.properties"
    },
    {
      "glob": "META-INF/build-info.properties"
    },
    {
      "glob": "META-INF/maven/org.xerial/sqlite-jdbc/pom.properties"
    },
    {
      "glob": "META-INF/resources/favicon.ico"
    },
    {
      "glob": "META-INF/resources/index.html"
    },
    {
      "glob": "META-INF/services/ch.qos.logback.classic.spi.Configurator"
    },
    {
      "glob": "META-INF/services/io.swagger.v3.core.converter.ModelConverter"
    },
    {
      "glob": "META-INF/services/jakarta.el.ExpressionFactory"
    },
    {
      "glob": "META-INF/services/jakarta.validation.ConstraintValidator"
    },
    {
      "glob": "META-INF/services/jakarta.validation.spi.ValidationProvider"
    },
    {
      "glob": "META-INF/services/jakarta.validation.valueextraction.ValueExtractor"
    },
    {
      "glob": "META-INF/services/java.net.spi.InetAddressResolverProvider"
    },
    {
      "glob": "META-INF/services/java.net.spi.URLStreamHandlerProvider"
    },
    {
      "glob": "META-INF/services/java.nio.channels.spi.SelectorProvider"
    },
    {
      "glob": "META-INF/services/java.sql.Driver"
    },
    {
      "glob": "META-INF/services/java.time.zone.ZoneRulesProvider"
    },
    {
      "glob": "META-INF/services/java.util.spi.ResourceBundleControlProvider"
    },
    {
      "glob": "META-INF/services/javax.xml.parsers.SAXParserFactory"
    },
    {
      "glob": "META-INF/services/javax.xml.transform.TransformerFactory"
    },
    {
      "glob": "META-INF/services/org.apache.juli.logging.Log"
    },
    {
      "glob": "META-INF/services/org.slf4j.spi.SLF4JServiceProvider"
    },
    {
      "glob": "META-INF/spring-autoconfigure-metadata.properties"
    },
    {
      "glob": "META-INF/spring.components"
    },
    {
      "glob": "META-INF/spring.factories"
    },
    {
      "glob": "META-INF/spring.integration.properties"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.replacements"
    },
    {
      "glob": "META-INF/validation.xml"
    },
    {
      "glob": "application-default.properties"
    },
    {
      "glob": "application-default.xml"
    },
    {
      "glob": "application-default.yaml"
    },
    {
      "glob": "application-default.yml"
    },
    {
      "glob": "application.properties"
    },
    {
      "glob": "application.xml"
    },
    {
      "glob": "application.yaml"
    },
    {
      "glob": "application.yml"
    },
    {
      "glob": "banner.txt"
    },
    {
      "glob": "com/aleksandrmakarov/journals"
    },
    {
      "glob": "com/aleksandrmakarov/journals/bot/BotCommandHandler$SessionDisplayResult.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/bot/BotCommandHandler.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/config/TelegramBotConfig.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/controller/AnonymousController$CachedCounts.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/controller/AnonymousController.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/controller/WebhookController.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/repository/JournalRepository.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/repository/QuestionRepository.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/repository/SessionRepository.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/repository/SqliteJournalRepository.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/repository/SqliteQuestionRepository.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/repository/SqliteSessionRepository.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/repository/SqliteUserRepository.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/repository/UserRepository.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/security/WebhookSecurityService$ValidationResult.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/security/WebhookSecurityService.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/service/JournalService.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/service/JournalServiceImpl.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/service/SessionService.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/service/SqliteSessionImpl.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/service/UserService.class"
    },
    {
      "glob": "com/aleksandrmakarov/journals/service/UserServiceImpl.class"
    },
    {
      "glob": "config/application-default.properties"
    },
    {
      "glob": "config/application-default.xml"
    },
    {
      "glob": "config/application-default.yaml"
    },
    {
      "glob": "config/application-default.yml"
    },
    {
      "glob": "config/application.properties"
    },
    {
      "glob": "config/application.xml"
    },
    {
      "glob": "config/application.yaml"
    },
    {
      "glob": "config/application.yml"
    },
    {
      "glob": "data-all.sql"
    },
    {
      "glob": "data.sql"
    },
    {
      "glob": "git.properties"
    },
    {
      "glob": "io/swagger/v3/oas/annotations/Hidden.class"
    },
    {
      "glob": "io/swagger/v3/oas/annotations/tags/Tag.class"
    },
    {
      "glob": "jakarta/servlet/LocalStrings.properties"
    },
    {
      "glob": "jakarta/servlet/LocalStrings_en.properties"
    },
    {
      "glob": "jakarta/servlet/LocalStrings_en_US.properties"
    },
    {
      "glob": "jakarta/servlet/http/LocalStrings.properties"
    },
    {
      "glob": "jakarta/servlet/http/LocalStrings_en.properties"
    },
    {
      "glob": "jakarta/servlet/http/LocalStrings_en_US.properties"
    },
    {
      "glob": "jndi.properties"
    },
    {
      "glob": "kotlin/Metadata.class"
    },
    {
      "glob": "kotlin/annotation/MustBeDocumented.class"
    },
    {
      "glob": "kotlin/annotation/Retention.class"
    },
    {
      "glob": "kotlin/annotation/Target.class"
    },
    {
      "glob": "logback-spring.groovy"
    },
    {
      "glob": "logback-spring.xml"
    },
    {
      "glob": "logback-test-spring.groovy"
    },
    {
      "glob": "logback-test-spring.xml"
    },
    {
      "glob": "logback-test.groovy"
    },
    {
      "glob": "logback-test.scmo"
    },
    {
      "glob": "logback-test.xml"
    },
    {
      "glob": "logback.groovy"
    },
    {
      "glob": "logback.scmo"
    },
    {
      "glob": "logback.xml"
    },
    {
      "glob": "messages.properties"
    },
    {
      "glob": "org/apache/catalina/authenticator/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/authenticator/jaspic/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/connector/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/core/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/core/RestrictedFilters.properties"
    },
    {
      "glob": "org/apache/catalina/core/RestrictedListeners.properties"
    },
    {
      "glob": "org/apache/catalina/core/RestrictedServlets.properties"
    },
    {
      "glob": "org/apache/catalina/deploy/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/loader/JdbcLeakPrevention.class"
    },
    {
      "glob": "org/apache/catalina/loader/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/mapper/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/mbeans/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/realm/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/security/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/session/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/startup/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/util/CharsetMapperDefault.properties"
    },
    {
      "glob": "org/apache/catalina/util/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/util/ServerInfo.properties"
    },
    {
      "glob": "org/apache/catalina/valves/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/webresources/LocalStrings.properties"
    },
    {
      "glob": "org/apache/coyote/LocalStrings.properties"
    },
    {
      "glob": "org/apache/coyote/http11/LocalStrings.properties"
    },
    {
      "glob": "org/apache/coyote/http11/filters/LocalStrings.properties"
    },
    {
      "glob": "org/apache/naming/LocalStrings.properties"
    },
    {
      "glob": "org/apache/naming/LocalStrings_en.properties"
    },
    {
      "glob": "org/apache/naming/LocalStrings_en_US.properties"
    },
    {
      "glob": "org/apache/tomcat/util/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/buf/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/compat/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/descriptor/web/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/parser/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/modeler/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/net/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/scan/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/threads/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/server/LocalStrings.properties"
    },
    {
      "glob": "org/springdoc/core/conditions/CacheOrGroupedOpenApiCondition$OnCacheDisabled.class"
    },
    {
      "glob": "org/springdoc/core/conditions/CacheOrGroupedOpenApiCondition$OnMultipleOpenApiSupportCondition.class"
    },
    {
      "glob": "org/springdoc/core/conditions/CacheOrGroupedOpenApiCondition.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiGroupsCondition$OnGroupConfigProperty.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiGroupsCondition$OnGroupedOpenApiBean.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiGroupsCondition.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiSupportCondition$OnActuatorDifferentPort.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiSupportCondition$OnMultipleOpenApiSupportCondition.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiSupportCondition.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$OpenApiResourceAdvice.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$QuerydslProvider.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocActuatorConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocRepositoryRestConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocWebFluxSupportConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$WebConversionServiceConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocDataRestConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocFunctionCatalogConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocGroovyConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocHateoasConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocJacksonKotlinModuleConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocJavadocConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocKotlinConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocKotlinxConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocPageableConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocSecurityConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocSortConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocUIConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/properties/AbstractSwaggerUiConfigProperties$Direction.class"
    },
    {
      "glob": "org/springdoc/core/properties/AbstractSwaggerUiConfigProperties$SwaggerUrl.class"
    },
    {
      "glob": "org/springdoc/core/properties/AbstractSwaggerUiConfigProperties.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$ApiDocs.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$Cache.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$GroupConfig.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$Groups.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$ModelConverters.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$SortConverter.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$Webjars.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiConfigParameters.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiConfigProperties$Csrf.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiConfigProperties$SyntaxHighlight.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiConfigProperties.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiOAuthProperties.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/MultipleOpenApiSupportConfiguration$SpringDocWebMvcActuatorDifferentConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/MultipleOpenApiSupportConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/SpringDocWebMvcConfiguration$SpringDocWebMvcActuatorConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/SpringDocWebMvcConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/ui/SwaggerConfig$SwaggerActuatorWelcomeConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/ui/SwaggerConfig.class"
    },
    {
      "glob": "org/springframework/aot/hint/annotation/Reflective.class"
    },
    {
      "glob": "org/springframework/beans/factory/Aware.class"
    },
    {
      "glob": "org/springframework/beans/factory/BeanClassLoaderAware.class"
    },
    {
      "glob": "org/springframework/beans/factory/BeanFactoryAware.class"
    },
    {
      "glob": "org/springframework/beans/factory/InitializingBean.class"
    },
    {
      "glob": "org/springframework/beans/factory/config/BeanFactoryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AbstractDependsOnBeanFactoryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureAfter.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureBefore.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureOrder.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$ClassProxyingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/availability/ApplicationAvailabilityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/GenericCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/NoOpCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/SimpleCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnBean.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnBooleanProperty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnClass.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnExpression.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnMissingBean.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnMissingClass.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnNotWarDeployment.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnProperty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnResource.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnSingleCandidate.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/ConfigurationPropertiesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/LifecycleAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/PropertyPlaceholderAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/dao/PersistenceExceptionTranslationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/ConditionalOnPreferredJsonMapper.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$HttpMessageConvertersAutoConfigurationRuntimeHints.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JsonbHttpMessageConvertersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/HttpClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration$GitResourceAvailableCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonAutoConfigurationRuntimeHints.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonMixinConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$ParameterNamesModuleConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$EmbeddedDatabaseCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$EmbeddedDatabaseConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$PooledDataSourceAvailableCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$PooledDataSourceCondition$ExplicitType.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$PooledDataSourceCondition$PooledDataSourceAvailable.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$PooledDataSourceCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$PooledDataSourceConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceCheckpointRestoreConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Dbcp2.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Generic.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$OracleUcp.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Tomcat.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceJmxConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/JdbcClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/JdbcTemplateAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/JdbcTemplateConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/JndiDataSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/NamedParameterJdbcTemplateConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration$CommonsDbcp2PoolDataSourceMetadataProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration$HikariDataSourcePoolMetadataRuntimeHints.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration$OracleUcpPoolDataSourceMetadataProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration$TomcatDataSourcePoolMetadataProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/R2dbcInitializationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration$SqlInitializationModeCondition$ModeIsNever.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration$SqlInitializationModeCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ssl/SslAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$AsyncConfigurerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$BootstrapExecutorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$OnExecutorCondition$ExecutorBeanCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$OnExecutorCondition$ModelCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$OnExecutorCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$TaskExecutorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$TaskSchedulerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$AspectJTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$EnableTransactionManagementConfiguration$JdkDynamicAutoProxyConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$EnableTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$TransactionTemplateConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionManagerCustomizationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/validation/PrimaryDefaultValidatorPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition$NotReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition$VirtualThreadsExecutorEnabled.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$JettyWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$UndertowWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DispatcherServletConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/HttpEncodingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/MultipartAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration$ForwardedHeaderFilterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration$ForwardedHeaderFilterCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedJetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedTomcat.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedUndertow.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$OptionalPathExtensionContentNegotiationStrategy.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ProblemDetailsErrorHandlingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ResourceHandlerRegistrationCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$WelcomePageHandlerMappingFactory.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$ErrorPageCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$StaticView.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration$JettyWebSocketConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration$UndertowWebSocketConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/ConfigurationProperties.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/EnableConfigurationProperties.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/sql/init/dependency/DatabaseInitializationDependencyConfigurer.class"
    },
    {
      "glob": "org/springframework/boot/web/server/mime-mappings.properties"
    },
    {
      "glob": "org/springframework/context/ApplicationContextAware.class"
    },
    {
      "glob": "org/springframework/context/ResourceLoaderAware.class"
    },
    {
      "glob": "org/springframework/context/annotation/AdviceModeImportSelector.class"
    },
    {
      "glob": "org/springframework/context/annotation/AutoProxyRegistrar.class"
    },
    {
      "glob": "org/springframework/context/annotation/Conditional.class"
    },
    {
      "glob": "org/springframework/context/annotation/Configuration.class"
    },
    {
      "glob": "org/springframework/context/annotation/Import.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportAware.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportBeanDefinitionRegistrar.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportRuntimeHints.class"
    },
    {
      "glob": "org/springframework/context/annotation/Lazy.class"
    },
    {
      "glob": "org/springframework/context/annotation/Role.class"
    },
    {
      "glob": "org/springframework/core/Ordered.class"
    },
    {
      "glob": "org/springframework/core/annotation/Order.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/AbstractTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/EnableTransactionManagement.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/TransactionManagementConfigurationSelector.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/Transactional.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/ControllerAdvice.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/Mapping.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/RequestMapping.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/ResponseBody.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/RestController.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/RestControllerAdvice.class"
    },
    {
      "glob": "org/springframework/web/context/ServletContextAware.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport$NoOpValidator.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/WebMvcConfigurer.class"
    },
    {
      "glob": "org/sqlite/native/Linux/x86_64/libsqlitejdbc.so"
    },
    {
      "glob": "public/favicon.ico"
    },
    {
      "glob": "public/index.html"
    },
    {
      "glob": "resources/favicon.ico"
    },
    {
      "glob": "resources/index.html"
    },
    {
      "glob": "schema.sql"
    },
    {
      "glob": "spring.properties"
    },
    {
      "glob": "springdoc.config.properties"
    },
    {
      "glob": "static/favicon.ico"
    },
    {
      "glob": "static/index.html"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt76b/nfkc.nrm"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt76b/uprops.icu"
    },
    {
      "module": "java.base",
      "glob": "sun/net/idn/uidna.spp"
    },
    {
      "bundle": "jakarta.servlet.LocalStrings"
    },
    {
      "bundle": "jakarta.servlet.http.LocalStrings"
    },
    {
      "bundle": "org.apache.catalina.authenticator.LocalStrings"
    },
    {
      "bundle": "org.apache.catalina.authenticator.jaspic.LocalStrings"
    },
    {
      "bundle": "org.apache.catalina.connector.LocalStrings"
    },
    {
      "bundle": "org.apache.catalina.core.LocalStrings"
    },
    {
      "bundle": "org.apache.catalina.deploy.LocalStrings"
    },
    {
      "bundle": "org.apache.catalina.loader.LocalStrings"
    },
    {
      "bundle": "org.apache.catalina.mapper.LocalStrings"
    },
    {
      "bundle": "org.apache.catalina.mbeans.LocalStrings"
    },
    {
      "bundle": "org.apache.catalina.realm.LocalStrings"
    },
    {
      "bundle": "org.apache.catalina.security.LocalStrings"
    },
    {
      "bundle": "org.apache.catalina.session.LocalStrings"
    },
    {
      "bundle": "org.apache.catalina.startup.LocalStrings"
    },
    {
      "bundle": "org.apache.catalina.util.LocalStrings"
    },
    {
      "bundle": "org.apache.catalina.valves.LocalStrings"
    },
    {
      "bundle": "org.apache.catalina.webresources.LocalStrings"
    },
    {
      "bundle": "org.apache.coyote.LocalStrings"
    },
    {
      "bundle": "org.apache.coyote.http11.LocalStrings"
    },
    {
      "bundle": "org.apache.coyote.http11.filters.LocalStrings"
    },
    {
      "bundle": "org.apache.naming.LocalStrings"
    },
    {
      "bundle": "org.apache.tomcat.util.LocalStrings"
    },
    {
      "bundle": "org.apache.tomcat.util.buf.LocalStrings"
    },
    {
      "bundle": "org.apache.tomcat.util.compat.LocalStrings"
    },
    {
      "bundle": "org.apache.tomcat.util.descriptor.web.LocalStrings"
    },
    {
      "bundle": "org.apache.tomcat.util.http.LocalStrings"
    },
    {
      "bundle": "org.apache.tomcat.util.http.parser.LocalStrings"
    },
    {
      "bundle": "org.apache.tomcat.util.modeler.LocalStrings"
    },
    {
      "bundle": "org.apache.tomcat.util.net.LocalStrings"
    },
    {
      "bundle": "org.apache.tomcat.util.scan.LocalStrings"
    },
    {
      "bundle": "org.apache.tomcat.util.threads.LocalStrings"
    },
    {
      "bundle": "org.apache.tomcat.websocket.LocalStrings"
    },
    {
      "bundle": "org.apache.tomcat.websocket.server.LocalStrings"
    }
  ]
}